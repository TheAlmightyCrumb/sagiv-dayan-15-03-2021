{"version":3,"sources":["actions/index.js","components/ThemeWrapper.jsx","components/AddItemDialog.jsx","components/ProductRow.jsx","components/ProductTable.jsx","components/SecondBar.jsx","components/FakeStoreOptions.jsx","components/ShopByProduct.jsx","components/StoreTable.jsx","components/StoreRow.jsx","components/ShopByStore.jsx","components/FirstBar.jsx","App.js","reducers/productReducer.js","reducers/storeReducer.js","reducers/currencyReducer.js","reducers/viewStateReducer.js","reducers/index.js","reportWebVitals.js","index.js"],"names":["addProduct","product","type","id","uuidv4","theme","createMuiTheme","palette","primary","light","grey","main","dark","secondary","lightBlue","contrastThreshold","tonalOffset","ThemeWrapper","children","ThemeProvider","useStyles","makeStyles","dialog","background","input","maxWidth","clearButton","marginRight","spacing","color","red","submitButton","green","AddItemDialog","open","handleClose","useState","name","price","store","estimatedArrivalDate","Date","formValues","setFormValues","enqueueSnackbar","useSnackbar","classes","dispatch","useDispatch","handleChangeFormValues","event","key","prev","target","value","sendErrorMessage","message","variant","Dialog","PaperProps","className","onClose","fullWidth","DialogTitle","onSubmit","e","preventDefault","trim","match","DialogContent","dividers","Grid","container","alignContent","item","md","sm","xs","FormControl","TextField","margin","label","InputProps","startAdornment","InputAdornment","position","icon","faFileSignature","onChange","faStore","faTag","DatePicker","autoOk","disableToolbar","inputVariant","format","disablePast","date","handleDateChange","DialogActions","justify","Button","onClick","startIcon","faTrashAlt","faSignInAlt","ProductRow","productDetails","currency","useSelector","state","productId","delivered","TableRow","TableCell","component","scope","align","view","TransitionComponent","Zoom","handleToggleClick","size","table","maxHeight","overflow","ProductTable","TableContainer","Paper","Table","stickyHeader","TableHead","colSpan","TableBody","tabs","flexGrow","SecondBar","viewState","Tabs","newValue","filter","indicatorColor","Tab","faShippingFast","disableRipple","faTruckLoading","FakeStoreOptions","items","setValue","Autocomplete","console","log","options","getOptionLabel","option","title","style","width","renderInput","params","helperText","IconButton","aria-label","parseInt","add","weeks","days","faPlus","addItemButton","borderRadius","ShopByProduct","products","setOpen","fakeStoreItems","setFakeStoreItems","isWaiting","setIsWaiting","fetchStoreItems","useCallback","fetch","then","res","json","visibleItems","getVisibleItems","useEffect","length","map","prod","Typography","marginTop","Divider","CircularProgress","disableShrink","Alert","severity","AlertTitle","StoreTable","StoreRow","storeDetails","quantity","separator","height","ShopByStore","stores","list","fontWeight","totalPrice","root","bar","activeLink","borderBottom","cursor","textDecoration","paddingBottom","inactiveLink","activeCurrency","inactiveCurrency","currencyTitle","FirstBar","location","useLocation","handleCurrencyChange","newView","changeCurrencyView","AppBar","Toolbar","alignItems","pathname","to","display","ButtonGroup","edge","faShekelSign","faDollarSign","App","fetchCurrencies","rates","ILS","interval","setInterval","clearInterval","basename","autoHideDuration","maxSnack","anchorOrigin","vertical","horizontal","utils","DateFnsUtils","Container","path","exact","productReducer","action","storeReducer","find","currencyReducer","viewStateReducer","reducer","combineReducers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca1c2ef1.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addProduct = (product) => ({\r\n    type: \"ADD\",\r\n    id: uuidv4(),\r\n    ...product\r\n})\r\n\r\nexport const toggleProduct = (id) => ({\r\n    type: \"TOGGLE\",\r\n    id\r\n})\r\n\r\nexport const updateCurrency = (newCurrency) => ({\r\n    type: \"UPDATE_CURRENCY\",\r\n    value: newCurrency\r\n})\r\n\r\nexport const changeCurrencyView = (newView) => ({\r\n    type: \"CHANGE_CURRENCY_VIEW\",\r\n    view: newView\r\n})\r\n\r\nexport const setViewState = (filter) => ({\r\n    type: \"SET_VIEW_STATE\",\r\n    filter\r\n  });\r\n  ","import { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { lightBlue, grey } from \"@material-ui/core/colors\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: grey[400],\r\n      main: grey[700],\r\n      dark: grey[900],\r\n    },\r\n    secondary: {\r\n      main: lightBlue[600],\r\n    },\r\n    contrastThreshold: 3,\r\n    tonalOffset: 0.2,\r\n  },\r\n});\r\n\r\nexport default function ThemeWrapper({ children }) {\r\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\r\n}\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { green, grey, red } from \"@material-ui/core/colors\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControl,\r\n  Grid,\r\n  InputAdornment,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faFileSignature,\r\n  faStore,\r\n  faTag,\r\n  faTrashAlt,\r\n  faSignInAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { addProduct } from \"../actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialog: {\r\n    background: grey[200],\r\n  },\r\n  input: {\r\n    maxWidth: \"100%\",\r\n  },\r\n  clearButton: {\r\n    marginRight: theme.spacing(3),\r\n    color: red[\"A700\"],\r\n  },\r\n  submitButton: {\r\n    color: green[500],\r\n  },\r\n}));\r\n\r\nexport default function AddItemDialog({ open, handleClose }) {\r\n  const [formValues, setFormValues] = useState({\r\n    name: \"\",\r\n    price: \"\",\r\n    store: \"\",\r\n    estimatedArrivalDate: new Date(),\r\n  });\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChangeFormValues = (event, key) => {\r\n    setFormValues((prev) => ({\r\n      ...prev,\r\n      [key]: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setFormValues((prev) => ({\r\n      ...prev,\r\n      estimatedArrivalDate: date,\r\n    }));\r\n  };\r\n\r\n  const sendErrorMessage = (message) => {\r\n    enqueueSnackbar(message, {\r\n      variant: \"error\",\r\n    });\r\n  };\r\n\r\n  const handleClear = (e) => {\r\n    e.preventDefault();\r\n    setFormValues({\r\n      name: \"\",\r\n      price: \"\",\r\n      store: \"\",\r\n      estimatedArrivalDate: new Date(),\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!formValues.name.trim()) {\r\n      sendErrorMessage(\"Item's name is missing\");\r\n      return;\r\n    }\r\n    if (!formValues.store.trim()) {\r\n      sendErrorMessage(\"Item's store is missing\");\r\n      return;\r\n    }\r\n    if (!formValues.price.match(/^\\d+$/g)) {\r\n      sendErrorMessage(\"Invalid price - digits only\");\r\n      return;\r\n    }\r\n    dispatch(addProduct(formValues));\r\n    enqueueSnackbar(\"Item has been added successfully\", {\r\n      variant: \"success\"\r\n    })\r\n    setFormValues({\r\n      name: \"\",\r\n      price: \"\",\r\n      store: \"\",\r\n      estimatedArrivalDate: new Date(),\r\n    });\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      PaperProps={{ className: classes.dialog }}\r\n      open={open}\r\n      onClose={handleClose}\r\n      fullWidth\r\n    >\r\n      <DialogTitle>Add New Item</DialogTitle>\r\n      <form onSubmit={handleSubmit}>\r\n        <DialogContent dividers>\r\n          <Grid container spacing={2} alignContent=\"center\">\r\n            <Grid item md={6} sm={6} xs={6}>\r\n              <FormControl>\r\n                <TextField\r\n                  className={classes.input}\r\n                  margin=\"dense\"\r\n                  label=\"Item Name\"\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <FontAwesomeIcon icon={faFileSignature} />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={(e) => handleChangeFormValues(e, \"name\")}\r\n                  value={formValues.name}\r\n                  variant=\"outlined\"\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item sm={6} xs={6}>\r\n              <FormControl>\r\n                <TextField\r\n                  className={classes.input}\r\n                  margin=\"dense\"\r\n                  label=\"Store\"\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <FontAwesomeIcon icon={faStore} />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={(e) => handleChangeFormValues(e, \"store\")}\r\n                  value={formValues.store}\r\n                  variant=\"outlined\"\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item sm={6} xs={6}>\r\n              <FormControl>\r\n                <TextField\r\n                  className={classes.input}\r\n                  margin=\"dense\"\r\n                  label=\"Price\"\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <FontAwesomeIcon icon={faTag} />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={(e) => handleChangeFormValues(e, \"price\")}\r\n                  value={formValues.price}\r\n                  variant=\"outlined\"\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item sm={6} xs={6}>\r\n              <FormControl>\r\n                <DatePicker\r\n                  autoOk\r\n                  disableToolbar\r\n                  margin=\"dense\"\r\n                  variant=\"inline\"\r\n                  inputVariant=\"outlined\"\r\n                  label=\"Estimated Date of Arrival\"\r\n                  value={formValues.estimatedArrivalDate}\r\n                  format=\"dd/MM/yyyy\"\r\n                  disablePast\r\n                  onChange={(date) => handleDateChange(date)}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Grid container justify=\"space-between\">\r\n            <Grid item>\r\n              <Button onClick={() => handleClose()} variant=\"text\">\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                className={classes.clearButton}\r\n                onClick={handleClear}\r\n                variant=\"text\"\r\n                startIcon={<FontAwesomeIcon icon={faTrashAlt} />}\r\n              >\r\n                Clear\r\n              </Button>\r\n              <Button\r\n                className={classes.submitButton}\r\n                type=\"submit\"\r\n                variant=\"text\"\r\n                startIcon={<FontAwesomeIcon icon={faSignInAlt} />}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { Button, TableCell, TableRow, Zoom } from \"@material-ui/core\";\r\nimport { format } from \"date-fns\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { toggleProduct } from \"../actions\";\r\n\r\nexport default function ProductRow({ productDetails }) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const dispatch = useDispatch();\r\n  const currency = useSelector((state) => state.currency);\r\n  const {\r\n    id: productId,\r\n    name,\r\n    store,\r\n    price,\r\n    estimatedArrivalDate,\r\n    delivered,\r\n  } = productDetails;\r\n\r\n  const handleToggleClick = (productId) => {\r\n    dispatch(toggleProduct(productId));\r\n    enqueueSnackbar(\r\n      delivered\r\n        ? \"Item has been reactivated\"\r\n        : \"Item has been marked as delivered\",\r\n      {\r\n        variant: \"info\",\r\n        TransitionComponent: Zoom,\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TableRow>\r\n      <TableCell component=\"th\" scope=\"row\">\r\n        {name}\r\n      </TableCell>\r\n      <TableCell align=\"left\">{store}</TableCell>\r\n      <TableCell align=\"right\">\r\n        {currency.view === \"ILS\" ? price * currency.value : price}\r\n      </TableCell>\r\n      <TableCell align=\"right\">\r\n        {format(estimatedArrivalDate, \"dd/MM/yyyy\")}\r\n      </TableCell>\r\n      <TableCell align=\"center\">\r\n        <Button\r\n          onClick={() => handleToggleClick(productId)}\r\n          size=\"small\"\r\n          fullWidth\r\n          variant=\"text\"\r\n        >\r\n          {delivered ? \"Activate\" : \"Archive\"}\r\n        </Button>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    maxHeight: \"280px\",\r\n    overflow: \"auto\",\r\n  },\r\n}));\r\n\r\nexport default function ProductTable({ children }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer className={classes.table} component={Paper}>\r\n      <Table stickyHeader size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Item Name</TableCell>\r\n            <TableCell align=\"left\">Store</TableCell>\r\n            <TableCell align=\"right\">Price</TableCell>\r\n            <TableCell align=\"right\">Estimated Arrival Time</TableCell>\r\n            <TableCell colSpan={1} />\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>{children}</TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { Tab, Tabs } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faShippingFast,\r\n  faTruckLoading,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { setViewState } from \"../actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tabs: {\r\n    flexGrow: 1,\r\n    background: theme.palette.primary.light,\r\n  },\r\n}));\r\n\r\nexport default function SecondBar() {\r\n  const viewState = useSelector((state) => state.viewState);\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    dispatch(setViewState(newValue));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tabs\r\n        className={classes.tabs}\r\n        variant=\"fullWidth\"\r\n        value={viewState}\r\n        onChange={handleTabChange}\r\n        indicatorColor=\"secondary\"\r\n      >\r\n        <Tab\r\n          icon={<FontAwesomeIcon icon={faShippingFast} />}\r\n          disableRipple\r\n          label=\"Ongoing\"\r\n          value=\"SHOW_WAITING\"\r\n        />\r\n        <Tab\r\n          icon={<FontAwesomeIcon icon={faTruckLoading} />}\r\n          disableRipple\r\n          label=\"Delivered\"\r\n          value=\"SHOW_DELIVERED\"\r\n        />\r\n      </Tabs>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Grid, IconButton, TextField } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { add } from \"date-fns\";\r\nimport { addProduct } from \"../actions\";\r\n\r\nexport default function FakeStoreOptions({ items }) {\r\n  const [value, setValue] = useState(null);\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOptionChange = (e, newValue) => {\r\n    console.log(\"value: \", value);\r\n    console.log(\"newValue: \", newValue);\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleAddClick = (e) => {\r\n    if (value === null) {\r\n      enqueueSnackbar(\"No item has been chosen\", {\r\n        variant: \"error\",\r\n      });\r\n      return;\r\n    }\r\n    dispatch(\r\n      addProduct({\r\n        name: value.title,\r\n        price: parseInt(value.price),\r\n        store: \"FakeStoreAPI\",\r\n        estimatedArrivalDate: add(new Date(), { weeks: 3, days: 4 }),\r\n      })\r\n    );\r\n    enqueueSnackbar(\"Item has been added successfully\", {\r\n      variant: \"success\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid container justify=\"flex-end\">\r\n      <Grid item>\r\n        <Autocomplete\r\n          id=\"combo-box-items\"\r\n          value={value}\r\n          onChange={handleOptionChange}\r\n          options={items}\r\n          getOptionLabel={(option) => option.title}\r\n          style={{ width: 300 }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              helperText=\"Estimated arrival date is approximately 25 days from placing an order\"\r\n              label=\"Our Store's Items...\"\r\n              variant=\"outlined\"\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <IconButton aria-label=\"add from shop options\" onClick={handleAddClick}>\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </IconButton>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Alert, AlertTitle} from \"@material-ui/lab\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport AddItemDialog from \"./AddItemDialog\";\r\nimport ProductRow from \"./ProductRow\";\r\nimport ProductTable from \"./ProductTable\";\r\nimport SecondBar from \"./SecondBar\";\r\nimport FakeStoreOptions from \"./FakeStoreOptions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  addItemButton: {\r\n    background: theme.palette.primary.dark,\r\n    color: theme.palette.secondary.main,\r\n    borderRadius: \"10px\",\r\n    \"&:hover\": {\r\n      background: theme.palette.secondary.main,\r\n      color: theme.palette.primary.dark,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ShopByProduct() {\r\n  const classes = useStyles();\r\n  const products = useSelector((state) => state.products);\r\n  const viewState = useSelector((state) => state.viewState);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [fakeStoreItems, setFakeStoreItems] = useState([]);\r\n  const [isWaiting, setIsWaiting] = useState(true);\r\n\r\n  const fetchStoreItems = useCallback(() => {\r\n    fetch(\"https://fakestoreapi.com/products\")\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setFakeStoreItems(res);\r\n        setIsWaiting(false);\r\n      });\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const getVisibleItems = (items, filter) => {\r\n    switch (filter) {\r\n      case \"SHOW_WAITING\":\r\n        return items.filter((item) => !item.delivered);\r\n      case \"SHOW_DELIVERED\":\r\n        return items.filter((item) => item.delivered);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const visibleItems = getVisibleItems(products, viewState);\r\n\r\n  useEffect(() => {\r\n    fetchStoreItems();\r\n  }, [fetchStoreItems]);\r\n\r\n  return (\r\n    <>\r\n      <AddItemDialog open={open} handleClose={handleClose} />\r\n      <SecondBar />\r\n      {visibleItems.length > 0 ? (\r\n        <ProductTable>\r\n          {visibleItems.map((prod) => (\r\n            <ProductRow key={prod.id} productDetails={prod} />\r\n          ))}\r\n        </ProductTable>\r\n      ) : (\r\n        <Typography align=\"center\" variant=\"h5\" style={{ marginTop: \"20px\" }}>\r\n          {viewState === \"SHOW_DELIVERED\"\r\n            ? \"Delivered items\"\r\n            : \"Awaiting items\"}{\" \"}\r\n          list is empty, add items to fill it\r\n        </Typography>\r\n      )}\r\n      <br />\r\n      <Divider />\r\n      <br />\r\n      <Grid container justify=\"space-between\">\r\n        <Grid item>\r\n          <Button\r\n            onClick={handleClickOpen}\r\n            startIcon={<FontAwesomeIcon icon={faPlus} />}\r\n            className={classes.addItemButton}\r\n          >\r\n            Add Item\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          {isWaiting ? (\r\n            <CircularProgress disableShrink />\r\n          ) : fakeStoreItems.length > 0 ? (\r\n            <FakeStoreOptions items={fakeStoreItems} />\r\n          ) : (\r\n            <Alert severity=\"error\">\r\n              <AlertTitle>Error</AlertTitle>\r\n              Could not fetch store items\r\n            </Alert>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    maxHeight: \"280px\",\r\n    overflow: \"auto\",\r\n  },\r\n}));\r\n\r\nexport default function StoreTable({ children }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer className={classes.table} component={Paper}>\r\n      <Table stickyHeader size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Store Name</TableCell>\r\n            <TableCell align=\"right\">Quantity</TableCell>\r\n            <TableCell align=\"right\">Total Price</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>{children}</TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { TableCell, TableRow } from \"@material-ui/core\";\r\n\r\nexport default function StoreRow({ storeDetails }) {\r\n  const currency = useSelector((state) => state.currency);\r\n  const { name, quantity, price } = storeDetails;\r\n\r\n  return (\r\n    <TableRow>\r\n      <TableCell component=\"th\" scope=\"row\">\r\n        {name}\r\n      </TableCell>\r\n      <TableCell align=\"right\">{quantity}</TableCell>\r\n      <TableCell align=\"right\">\r\n        {currency.view === \"ILS\" ? price * currency.value : price}\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Divider, Typography } from \"@material-ui/core\";\r\nimport StoreTable from \"./StoreTable\";\r\nimport StoreRow from \"./StoreRow\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  separator: {\r\n    height: \"15px\",\r\n    background: theme.palette.primary.light,\r\n  },\r\n}));\r\n\r\nexport default function ShopByStore() {\r\n  const classes = useStyles();\r\n  const stores = useSelector((state) => state.stores);\r\n  const currency = useSelector((state) => state.currency);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.separator}></div>\r\n      {stores.list.length > 0 ? (\r\n        <StoreTable>\r\n          {stores.list.map((store) => (\r\n            <StoreRow key={store.name} storeDetails={store} />\r\n          ))}\r\n        </StoreTable>\r\n      ) : (\r\n        <Typography align=\"center\" variant=\"h5\" style={{ marginTop: \"20px\" }}>\r\n          Store list is empty, add items to fill it\r\n        </Typography>\r\n      )}\r\n      <br />\r\n      <Divider />\r\n      <br />\r\n      <Typography align=\"right\" style={{ fontWeight: \"bold\" }}>\r\n        Total:{\" \"}\r\n        {currency.view === \"ILS\"\r\n          ? stores.totalPrice * currency.value\r\n          : stores.totalPrice}\r\n      </Typography>\r\n    </>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  AppBar,\r\n  ButtonGroup,\r\n  Grid,\r\n  IconButton,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faDollarSign, faShekelSign } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { changeCurrencyView } from \"../actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  bar: {\r\n    background: theme.palette.primary.dark,\r\n  },\r\n  activeLink: {\r\n    color: theme.palette.secondary.main,\r\n    borderBottom: `2px solid ${theme.palette.secondary.light}`,\r\n    cursor: \"pointer\",\r\n    textDecoration: \"none\",\r\n    paddingBottom: \"3px\",\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  inactiveLink: {\r\n    color: theme.palette.primary.light,\r\n    cursor: \"pointer\",\r\n    textDecoration: \"none\",\r\n    paddingBottom: \"3px\",\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  activeCurrency: {\r\n    color: theme.palette.secondary.main,\r\n    borderBottom: `2px dashed ${theme.palette.secondary.light}`,\r\n    borderRadius: \"0\",\r\n    paddingBottom: \"3px\",\r\n  },\r\n  inactiveCurrency: {\r\n    color: theme.palette.primary.light,\r\n    paddingBottom: \"3px\",\r\n  },\r\n  currencyTitle: {\r\n    marginRight: theme.spacing(1),\r\n    color: theme.palette.primary.light,\r\n    paddingBottom: \"3px\"\r\n  },\r\n}));\r\n\r\nexport default function FirstBar() {\r\n  const classes = useStyles();\r\n  const currency = useSelector((state) => state.currency);\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n\r\n  const handleCurrencyChange = (newView) => {\r\n    dispatch(changeCurrencyView(newView));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.bar}>\r\n        <Toolbar variant=\"dense\">\r\n          <Grid container justify=\"space-between\" alignItems=\"center\">\r\n            <Grid item>\r\n              <NavLink\r\n                className={\r\n                  location.pathname === \"/\"\r\n                    ? classes.activeLink\r\n                    : classes.inactiveLink\r\n                }\r\n                to=\"/\"\r\n              >\r\n                Shop by Product\r\n              </NavLink>\r\n              <NavLink\r\n                className={\r\n                  location.pathname === \"/stores\"\r\n                    ? classes.activeLink\r\n                    : classes.inactiveLink\r\n                }\r\n                to=\"/stores\"\r\n              >\r\n                Shop by Stores\r\n              </NavLink>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography\r\n                align=\"left\"\r\n                className={classes.currencyTitle}\r\n                display=\"inline\"\r\n              >\r\n                Currency:\r\n              </Typography>\r\n              <ButtonGroup>\r\n                <IconButton\r\n                  aria-label=\"ILS\"\r\n                  className={\r\n                    currency.view === \"ILS\"\r\n                      ? classes.activeCurrency\r\n                      : classes.inactiveCurrency\r\n                  }\r\n                  size=\"small\"\r\n                  edge=\"end\"\r\n                  onClick={() => handleCurrencyChange(\"ILS\")}\r\n                >\r\n                  <FontAwesomeIcon icon={faShekelSign} />\r\n                </IconButton>\r\n                <IconButton\r\n                  aria-label=\"USD\"\r\n                  className={\r\n                    currency.view === \"USD\"\r\n                      ? classes.activeCurrency\r\n                      : classes.inactiveCurrency\r\n                  }\r\n                  size=\"small\"\r\n                  edge=\"end\"\r\n                  onClick={() => handleCurrencyChange(\"USD\")}\r\n                >\r\n                  <FontAwesomeIcon icon={faDollarSign} />\r\n                </IconButton>\r\n              </ButtonGroup>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { Container } from \"@material-ui/core\";\nimport { SnackbarProvider } from \"notistack\";\nimport { updateCurrency } from \"./actions\";\nimport ThemeWrapper from \"./components/ThemeWrapper\";\nimport ShopByProduct from \"./components/ShopByProduct\";\nimport ShopByStore from \"./components/ShopByStore\";\nimport FirstBar from \"./components/FirstBar\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const fetchCurrencies = useCallback(() => {\n    fetch(\"https://api.exchangeratesapi.io/latest?base=USD\")\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res);\n        dispatch(updateCurrency(res.rates.ILS));\n      });\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(fetchCurrencies, 10000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <Router basename=\"/\">\n      <SnackbarProvider\n        autoHideDuration={2000}\n        maxSnack={2}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n      >\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <ThemeWrapper>\n            <Container maxWidth=\"md\">\n              <FirstBar />\n              <Switch>\n                <Route path=\"/\" exact component={ShopByProduct} />\n                <Route path=\"/stores\" exact component={ShopByStore} />\n              </Switch>\n            </Container>\n          </ThemeWrapper>\n        </MuiPickersUtilsProvider>\n      </SnackbarProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","const productReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ADD\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.id,\r\n          name: action.name,\r\n          price: action.price,\r\n          store: action.store,\r\n          estimatedArrivalDate: action.estimatedArrivalDate,\r\n          delivered: false,\r\n        },\r\n      ];\r\n    case \"TOGGLE\":\r\n      return state.map((prod) => {\r\n        return prod.id === action.id\r\n          ? { ...prod, delivered: !prod.delivered }\r\n          : prod;\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default productReducer;\r\n","const storeReducer = (state = { list: [], totalPrice: 0 }, action) => {\r\n  switch (action.type) {\r\n    case \"ADD\":\r\n      return state.list.find((store) => store.name === action.store)\r\n        ? {\r\n            list: state.list.map((store) => {\r\n              return store.name === action.store\r\n                ? {\r\n                    ...store,\r\n                    quantity: store.quantity + 1,\r\n                    price: parseInt(store.price) + parseInt(action.price),\r\n                  }\r\n                : store;\r\n            }),\r\n            totalPrice: state.totalPrice + parseInt(action.price),\r\n          }\r\n        : {\r\n            list: [\r\n              ...state.list,\r\n              {\r\n                name: action.store,\r\n                quantity: 1,\r\n                price: parseInt(action.price),\r\n              },\r\n            ],\r\n            totalPrice: state.totalPrice + parseInt(action.price),\r\n          };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default storeReducer;\r\n","const currencyReducer = (state = { value: 3.3, view: \"USD\"}, action) => {\r\n    switch (action.type) {\r\n      case \"UPDATE_CURRENCY\":\r\n        return {\r\n          ...state,\r\n          value: parseInt(action.value)\r\n        }\r\n      case \"CHANGE_CURRENCY_VIEW\":\r\n        return {\r\n          ...state,\r\n          view: action.view\r\n        }\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default currencyReducer;","const viewStateReducer = (state = \"SHOW_WAITING\", action) => {\r\n    switch (action.type) {\r\n      case \"SET_VIEW_STATE\":\r\n        return action.filter;\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default viewStateReducer;\r\n  ","import { combineReducers } from \"redux\";\r\nimport productReducer from \"./productReducer\";\r\nimport storeReducer from \"./storeReducer\";\r\nimport currencyReducer from \"./currencyReducer\";\r\nimport viewStateReducer from \"./viewStateReducer\";\r\n\r\nconst reducer = combineReducers({\r\n  products: productReducer,\r\n  stores: storeReducer,\r\n  currency: currencyReducer,\r\n  viewState: viewStateReducer\r\n});\r\n\r\nexport default reducer;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reducer from \"./reducers\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}